from aiogram import Bot, Dispatcher, F
# from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command
from aiogram.types import Message, FSInputFile, ReplyKeyboardRemove
import logging

import asyncio
import os
import sqlite3

from myDB import get_categories, create_tables, get_hash
from downloadPhoto import *
import config as cfg
import keyboards as kbs


#? –ë–∞–∑–∞ –î–∞–Ω–Ω—ã—Ö: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
db = sqlite3.connect('database.db')
cursor = db.cursor()


#? –ë–û–¢
# default=DefaultBotProperties(parse_mode='HTML')
bot = Bot(cfg.TOKEN) # —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
dp = Dispatcher() # —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–ø–ª—è—Ä–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞


#? –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    # –∏–≥–Ω–æ—Ä –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –¥–∞–Ω—ã –≤ –æ—Ç–∫–ª—é—á–∫–µ
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞


#? –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command('start'))
async def start_handler(msg: Message, first: bool = True):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞—Ä–µ–≥–∞–Ω –ª–∏ —é–∑–µ—Ä?
    cursor.execute("SELECT * FROM users WHERE id = ?", (msg.from_user.id,))
    if cursor.fetchone() == None:
        # —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —é–∑–µ—Ä–∞ –≤ –ë–î
        cursor.execute("INSERT INTO users VALUES (?, ?, ?, ?)", (
            msg.from_user.id,
            '',
            0,
            False
            ))
        
    else:
        # —Å–±—Ä–æ—Å –ø—É—Ç–∏
        cursor.execute(
            "UPDATE users SET path = ? WHERE id = ?",
            ('', msg.from_user.id)
        )
    db.commit()
    is_banned = cursor.execute(
        "SELECT is_banned FROM users WHERE id = ?",
        (msg.from_user.id,)
    ).fetchone()[0]
    if first: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É start
        await msg.answer(
f'''
–ü—Ä–∏–≤–µ—Ç, {msg.from_user.first_name}!
–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Ç–µ–±–µ —Ñ–æ—Ä–º—É–ª—ã!
–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:
''',
        reply_markup=kbs.get_start_keyboard(get_categories(0), is_banned)
        )
    else:
        text = '''
–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:
'''
        await msg.answer(
            text, 
            reply_markup=kbs.get_start_keyboard(get_categories(0), is_banned)
        )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.message(F.text == '–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
async def go_to_start_handler(msg: Message):
    await start_handler(msg, False) # –≤–æ–∑–≤—Ä–∞—Ç –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é


#? –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
@dp.message(Command('admin'))
async def admin_handler(msg: Message):
    cursor.execute("SELECT * FROM admins WHERE id = ?", (msg.from_user.id,))
    admin = cursor.fetchone()
    if admin == None:
        await msg.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')
        return
    if admin[2] == '':
        await msg.answer(f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {msg.from_user.first_name}!\n\
–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:')
        cursor.execute(
            "UPDATE admins SET input_passwd = ? WHERE id = ?",
            (True, msg.from_user.id)
        )
        db.commit()
    else:
        await msg.answer(f'{msg.from_user.first_name}, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à –ø–∞—Ä–æ–ª—å:')
        cursor.execute(
            "UPDATE admins SET login = ? WHERE id = ?",
            (True, msg.from_user.id)
        )
        db.commit()
        

#? —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º—É–ª—ã (—Ä–µ–∂–∏–º –æ–±–∑–æ—Ä–∞ –Ω–æ–≤—ã—Ö —Ñ–æ—Ä–º—É–ª)
async def manager_show_cur_card(msg: Message):
    card_id = cursor.execute(
        "SELECT id_card FROM managers WHERE id = ?",
        (msg.from_user.id,)
    ).fetchone()[0]
    cursor.execute(
        "SELECT * FROM formuls WHERE id = ?",
        (card_id,)
    )
    os.chdir('./Img/')
    card = cursor.fetchone()
    await msg.answer(
f'''
–ù–∞–∑–≤–∞–Ω–∏–µ (name): {card[2]}
–û–ø–∏—Å–∞–Ω–∏–µ (description): {card[3]}
–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ (link): {card[4]}
–ü—É—Ç—å –≤ –ë–î (path): {card[1]}
''')
    os.chdir('../')
    await msg.answer(
        '–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:',
        reply_markup = kbs.get_manager_keyboard()
    )


#? –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def message_handler(msg: Message):
    user_id = msg.from_user.id
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ "–ª–µ–≤—ã—Ö" –∫–æ–º–∞–Ω–¥
    if msg.text[0] == '/':
        await msg.answer('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!')
        return

    #? –≤—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω–∫—É
    cursor.execute("SELECT input_passwd, login FROM admins WHERE id = ?",
            (user_id,)
        )
    admin = cursor.fetchone()
    # –ø—Ä–æ–≤–µ—Ä–∫–∞: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if admin != None:
        if admin[0]: # –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è (–¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
            cursor.execute(
                "UPDATE admins SET password = ? WHERE id = ?",
                (get_hash(msg.text), user_id)
            )
            cursor.execute(
                "UPDATE admins SET input_passwd = ? WHERE id = ?",
                (False, user_id)
            )
            db.commit()
            await msg.answer('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω! –î–ª—è \
–≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \
/admin')
        if admin[1]: # –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è (–¥–ª—è –≤—Ö–æ–¥–∞)
            cursor.execute(
                "SELECT password FROM admins WHERE id = ?",
                (user_id,)
            )
            if cursor.fetchone()[0] == get_hash(msg.text):
                cursor.execute(
                    "UPDATE admins SET login = ? WHERE id = ?",
                    (False, user_id)
                )
                cursor.execute(
                    "UPDATE admins SET in_admin = ? WHERE id = ?",
                    (True, user_id)
                )
                cursor.execute(
                    "UPDATE users SET path = ? WHERE id = ?",
                    ('', user_id)
                )
                db.commit()
                await msg.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å! \
–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:', reply_markup=kbs.get_admin_keyboard())
                return
            else:
                cursor.execute(
                    "UPDATE admins SET login = ? WHERE id = ?",
                    (False, msg.from_user.id)
                )
                await msg.answer('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!')
                await msg.answer('–í—ã –±—ã–ª–∏ –≤—ã–∫–∏–Ω—É—Ç—ã –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏! –ü—Ä–∏—á–∏–Ω–∞: \
–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.')
                return
                
        #? –∞–¥–º–∏–Ω–∫–∞
        in_admin = cursor.execute(
            "SELECT in_admin FROM admins WHERE id = ?",
            (user_id,)
        ).fetchone()[0]
        if in_admin:
            # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            if msg.text == '–í—ã–π—Ç–∏ –∏–∑ –ø–∞–Ω–µ–ª–∏':
                cursor.execute(
                    "UPDATE admins SET in_admin = ? WHERE id = ?",
                    (False, user_id)
                )
                db.commit()
                await msg.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏')
                await start_handler(msg, False)
                return
            elif msg.text == '–ù–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã':
                # –ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–∞–Ω–µ–ª–∏ –æ–±–∑–æ—Ä–∞ —Ñ–æ—Ä–º—É–ª
                card_id = cursor.execute(
                    "SELECT id FROM formuls WHERE status = ?",
                    ('CHECK',)
                ).fetchone()
                if card_id != None:
                    # –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã
                    # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∞–¥–º–∏–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ managers
                    cursor.execute(
                        "INSERT INTO managers VALUES (?, ?, ?, ?, ?, ?)",
                        (user_id, card_id[0], False, False, '', False)
                    )
                    db.commit()
                    await manager_show_cur_card(msg)
                    del card_id
                    return
                else:
                    await msg.answer('–ù–æ–≤—ã—Ö —Ñ–æ—Ä–º—É–ª –Ω–µ—Ç! –û—Ç–¥—ã—Ö–∞–µ–º)')
                    return
            
            manager = cursor.execute(
                "SELECT * FROM managers WHERE id = ?",
                (user_id,)
            ).fetchone()

            #? —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —ç–¥–∏—Ç–∞ —Ñ–æ—Ä–º—É–ª—ã
            if manager != None:
                # –µ—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–Ω–µ–ª–∏ –æ–±–∑–æ—Ä–∞ —Ñ–æ—Ä–º—É–ª
                if msg.text == '–ù–∞–∑–∞–¥ –≤ –ø–∞–Ω–µ–ª—åüö™':
                    cursor.execute(
                        "DELETE FROM managers WHERE id = ?",
                        (user_id,)
                    )
                    db.commit()
                    await msg.answer(
                        '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:',
                        reply_markup = kbs.get_admin_keyboard()
                    )
                    return
                elif msg.text == '‚úîÔ∏è–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å‚úîÔ∏è':
                    cursor.execute(
                        "UPDATE managers SET manage = ? WHERE id = ?",
                        (True, user_id)
                    )
                    db.commit()
                    path = cursor.execute(
                        "SELECT path FROM formuls WHERE id = ?",
                        (manager[1],)
                    ).fetchone()[0]
                    if path == '':
                        cursor.execute(
                            "UPDATE managers SET input_path = ? WHERE id = ?",
                            (True, user_id)
                        )
                        db.commit()
                        await msg.answer(
                            '–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Ñ–æ—Ä–º—É–ª—ã ("–æ—Ç–º–µ–Ω–∞" –¥–ª—è –æ—Ç–º–µ–Ω—ã):'
                        )
                        return
                    else:
                        await msg.answer(
                            '–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:',
                            reply_markup=kbs.get_card_edit_keyboard()
                        )
                        return
                elif msg.text == '‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å‚ùå':
                    cursor.execute(
                        "DELETE FROM formuls WHERE id = ?",
                        (manager[1],)
                    )
                    db.commit()
                    card_id = cursor.execute(
                        "SELECT id FROM formuls WHERE status = ?",
                        ('CHECK',)
                    ).fetchone()
                    if card_id != None:
                        cursor.execute(
                            "UPDATE managers SET id_card = ? WHERE id = ?",
                            (card_id[0], user_id)
                        )
                        db.commit()
                        del card_id
                        await msg.answer('–§–æ—Ä–º—É–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ë–î')
                        await manager_show_cur_card(msg)
                    else:
                        cursor.execute(
                            "DELETE FROM managers WHERE id = ?",
                            (user_id,)
                        )
                        await msg.answer(
                            '–ù–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:',
                            reply_markup=kbs.get_admin_keyboard()
                        )
                        db.commit()
                    return
                elif msg.text == 'üìã‚ùå–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∏ –≤—ã–¥–∞—Ç—å –ø—Ä–µ–¥.‚ùåüìã':
                    # –≤—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã
                    creater_id = cursor.execute(
                        "SELECT creater_id FROM formuls WHERE id = ?",
                        (manager[1],)
                    ).fetchone()[0]
                    warns = cursor.execute(
                        "SELECT warns FROM users WHERE id = ?",
                        (creater_id,)
                    ).fetchone()[0]
                    warns += 1
                    if warns == 3:
                        # –µ—Å–ª–∏ –≤–∞—Ä–Ω–æ–≤ –º–Ω–æ–≥–æ - –±–∞–Ω
                        cursor.execute(
                            "UPDATE users SET is_banned = ? WHERE = ?",
                            (True, creater_id)
                        )
                        db.commit()
                    cursor.execute(
                        "UPDATE users SET warns = ? WHERE id = ?",
                        (warns, creater_id)
                    )
                    cursor.execute(
                        "DELETE FROM formuls WHERE id = ?",
                        (manager[1],)
                    )
                    db.commit()
                    await msg.answer('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤—ã–¥–∞–Ω–æ!')
                    del creater_id

                    # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ id_card
                    card_id = cursor.execute(
                        "SELECT id FROM formuls WHERE status = ?",
                        ('CHECK',)
                    ).fetchone()
                    if card_id != None:
                        cursor.execute(
                            "UPDATE managers SET id_card = ? WHERE id = ?",
                            (card_id[0], user_id)
                        )
                        db.commit()
                        del card_id
                        await msg.answer('–§–æ—Ä–º—É–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ë–î')
                        await manager_show_cur_card(msg)
                    else:
                        cursor.execute(
                            "DELETE FROM managers WHERE id = ?",
                            (user_id,)
                        )
                        await msg.answer(
                            '–ù–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:',
                            reply_markup=kbs.get_admin_keyboard()
                        )
                        db.commit()
                    return                
                if manager[3]:
                    # –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –ø—É—Ç—å —Ñ–æ—Ä–º—É–ª—ã –≤ –ë–î
                    if msg.text.lower() != '–æ—Ç–º–µ–Ω–∞':
                        cursor.execute(
                            "UPDATE formuls SET path = ? WHERE id = ?",
                            (msg.text, manager[1])
                        )
                        await msg.answer('–ü—É—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!')
                    cursor.execute(
                        "UPDATE managers SET input_path = ? WHERE id = ?",
                        (False, user_id)
                    )
                    db.commit()
                    await manager_show_cur_card(msg)
                    return
                elif not manager[3] and not manager[5] and manager[2]:
                    # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                    buttons = [
                        'name',
                        'description',
                        'link',
                        'path'
                    ]
                    if msg.text in buttons:
                        cursor.execute(
                            "UPDATE managers SET input = ? WHERE id = ?",
                            (True, user_id)
                        )
                        cursor.execute(
                            "UPDATE managers SET input_name = ? WHERE id = ?",
                            (msg.text, user_id)
                        )
                        db.commit()
                        await msg.answer(
                            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π {msg.text}:'
                        )
                        return
                    elif msg.text == '‚úîÔ∏è–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å‚úîÔ∏è':
                        cursor.execute(
                            "UPDATE formuls SET status = ? WHERE id = ?",
                            ('OK', manager[1])
                        )
                        cursor.execute(
                            "UPDATE managers SET manage = ? WHERE id = ?",
                            (False, user_id)
                        )
                        card_id = cursor.execute(
                            "SELECT id FROM formuls WHERE status = ?",
                            ('CHECK',)
                        ).fetchone()
                        if card_id != None:
                            cursor.execute(
                                "UPDATE managers SET id_card = ? WHERE id = ?",
                                (card_id[0], user_id)
                            )
                            await manager_show_cur_card(msg)
                        else:
                            cursor.execute(
                                "DELETE FROM managers WHERE id = ?",
                                (user_id,)
                            )
                            await msg.answer(
                                '–ù–æ–≤—ã–µ —Ñ–æ—Ä–º—É–ª—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!\n–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:',
                                reply_markup=kbs.get_admin_keyboard()
                            )
                        db.commit()
                        return
                elif manager[5]:
                    # –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
                    cursor.execute(
                        f"UPDATE formuls SET {manager[4]} = ? WHERE id = ?",
                        (msg.text, manager[1])
                    )
                    cursor.execute(
                        "UPDATE managers SET input_name = ? WHERE id = ?",
                        ('', user_id)
                    )
                    cursor.execute(
                        "UPDATE managers SET input = ? WHERE id = ?",
                        (False, user_id)
                    )
                    db.commit()
                    await manager_show_cur_card(msg)
                    return
                    

    creator = cursor.execute(
        "SELECT input_text FROM creators WHERE id = ?",
        (user_id,)
    ).fetchone()
    #? –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ–æ—Ä–º—É–ª—ã
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö—Ä–∂–¥–µ–Ω–∏–∏ –≤ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    if creator == None:
        if msg.text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ñ–æ—Ä–º—É–ª—É':
            # –∑–∞—Ö–æ–¥ –≤ --//--
            cursor.execute(
                "INSERT INTO creators VALUES (?, ?, ?, ?, ?)",
                (user_id, 'name', '', '', '')
            )
            db.commit()
            await msg.answer(
                '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã ("–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞):',
                reply_markup=ReplyKeyboardRemove()
            )
            return
    else:
        if msg.text.lower() == '–æ—Ç–º–µ–Ω–∞':
            # –µ—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–∞ "–æ—Ç–º–µ–Ω–∞"
            cursor.execute(
                "DELETE FROM creators WHERE id = ?",
                (user_id,)
            )
            db.commit()
            await start_handler(msg, False)
            return
        if creator[0] == 'name':
            # –≤–≤–æ–¥ –∏–º–µ–Ω–∏ —Ñ–æ—Ä–º—É–ª—ã
            cursor.execute(
                "UPDATE creators SET formul_name = ? WHERE id = ?",
                (msg.text, user_id)
            )
            cursor.execute(
                "UPDATE creators SET input_text = ? WHERE id = ?",
                ('description', user_id)
            )
            db.commit()
            await msg.answer(
                '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª—ã ("–Ω–µ—Ç" - –ø—É—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ) \
("–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞):'
            )
            return
        elif creator[0] == 'description':
            # –≤–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è
            if msg.text.lower() != '–Ω–µ—Ç':
                cursor.execute(
                    "UPDATE creators SET formul_description = ? WHERE id = ?",
                    (msg.text, user_id)
                )
            else:
                cursor.execute(
                    "UPDATE creators SET formul_description = ? WHERE id = ?",
                    ('', user_id)
                )
            cursor.execute(
                "UPDATE creators SET input_text = ? WHERE id = ?",
                ('link', user_id)
            )
            db.commit()
            await msg.answer(
                '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ —Ñ–æ—Ä–º—É–ª—ã ("–æ—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞):'
            )
            return
        elif creator[0] == 'link':
            # –≤–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–æ—Ç–æ
            cursor.execute(
                "UPDATE creators SET formul_link = ? WHERE id = ?",
                (msg.text, user_id)
            )
            db.commit()

            # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
            creator = cursor.execute(
                "SELECT formul_name, formul_description, formul_link \
FROM creators WHERE id = ?",
                (user_id,)
            ).fetchone()
            cursor.execute(
                "INSERT INTO formuls(path, name, description, link, status, \
creater_id) VALUES (?, ?, ?, ?, ?, ?)",
                ('', creator[0], creator[1], creator[2], 'CHECK', user_id)
            )
            cursor.execute(
                "DELETE FROM creators WHERE id = ?",
                (user_id,)
            )
            db.commit()

            await msg.answer(
                '–ö–∞–∫ —Ç–æ–ª—å–∫–æ –í–∞—à–∞ —Ñ–æ—Ä–º—É–ª–∞ –ø—Ä–æ–π–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É, –æ–Ω–∞ –±—É–¥–µ—Ç \
–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.'
            )
            await start_handler(msg, False)
            download_photos_from_DB()
            return

    
    #? –≤—ã–±–æ—Ä —Ñ–æ—Ä–º—É–ª
    keyboard = None # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    file = False
    # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∏–∑ –ë–î
    old_path = cursor.execute(
        "SELECT path FROM users WHERE id = ?",
        (user_id,)
    ).fetchone()[0]

    # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—É—Ç–∏
    new_path = old_path + msg.text + '/'
    level_names = new_path.split('/')
    level_names.remove('')
    level = len(level_names) # –≥–ª—É–±–∏–Ω–∞ "–ø–æ–≥—Ä—É–∂–µ–Ω–∏—è" :)

    categories = get_categories(level, new_path) # –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    if categories != 1:
        if msg.text in get_categories(level-1):
            keyboard = kbs.get_keyboard(categories) # –∑–∞–ø–∏—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            
            # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ( –ë–î )
            cursor.execute(
            "UPDATE users SET path = ? WHERE id = ?",
            (new_path, user_id)
            )
            db.commit()
    else:
        file = True
        # –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Å—Å—ã–ª–∫–∏ –∏–∑ –ë–î
        data = cursor.execute(
            "SELECT description, link FROM formuls \
            WHERE path = ? AND name = ?",
            (old_path, msg.text)
        ).fetchone()
        description, file_link = data[0], data[1]

    if file:
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
        os.chdir('./Img/')
        await msg.answer_photo(FSInputFile(get_name(file_link)))
        if description:
            await msg.answer(description)
        os.chdir('../')

        

    if keyboard != None:
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await msg.answer('–í—ã–±–µ—Ä–∏—Ç–µ:', reply_markup=keyboard)

#? –≤—Ö–æ–¥ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É
if __name__ == '__main__':
    create_tables()
    download_photos_from_DB()
    logging.basicConfig(level=logging.INFO) # –∑–∞–ø—É—Å–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    asyncio.run(main())
